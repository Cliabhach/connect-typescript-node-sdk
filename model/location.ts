/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Address } from './address';
import { BusinessHours } from './businessHours';
import { Coordinates } from './coordinates';

/**
* Represents one of a business\'s locations.
*/
export class Location {
    /**
    * The location\'s unique ID.
    */
    'id'?: string;
    /**
    * The location\'s name. Location names are set by the account owner and displayed in the dashboard as the location\'s nickname
    */
    'name'?: string;
    'address'?: Address;
    /**
    * The [IANA Timezone Database](https://www.iana.org/time-zones) identifier for the location\'s timezone.
    */
    'timezone'?: string;
    /**
    * Indicates which Square features are enabled for the location. See [LocationCapability](#type-locationcapability) for possible values
    */
    'capabilities'?: Array<string>;
    /**
    * The location\'s status See [LocationStatus](#type-locationstatus) for possible values
    */
    'status'?: string;
    /**
    * The time when the location was created, in RFC 3339 format.
    */
    'createdAt'?: string;
    /**
    * The identifier of the merchant that owns the location.
    */
    'merchantId'?: string;
    /**
    * The location\'s country, in ISO 3166-1-alpha-2 format. See [Country](#type-country) for possible values
    */
    'country'?: string;
    /**
    * The language associated with the location in [BCP 47 format](https://tools.ietf.org/html/bcp47#appendix-A).
    */
    'languageCode'?: string;
    /**
    * The currency used for all transactions at this location, specified in __ISO 4217 format__. For example, the currency for a location processing transactions in the United States is \'USD\'. See [Currency](#type-currency) for possible values
    */
    'currency'?: string;
    /**
    * The location\'s phone_number.
    */
    'phoneNumber'?: string;
    /**
    * The location\'s business_name which is shown to its customers. For example, this is the name printed on its customer\'s receipts.
    */
    'businessName'?: string;
    /**
    * The location\'s type, as set by the account owner in the Square dashboard. Typically used to indicate whether or not the location object represents a physical space like a building or mall space. See [LocationType](#type-locationtype) for possible values
    */
    'type'?: string;
    /**
    * The location\'s website, as set by the account owner in the Square dashboard.  Default: none; only exists if explicitly set.
    */
    'websiteUrl'?: string;
    'businessHours'?: BusinessHours;
    /**
    * The email of the location.
    */
    'businessEmail'?: string;
    /**
    * The business description of the location.
    */
    'description'?: string;
    /**
    * The Twitter username of the location without the \'
    */
    'twitterUsername'?: string;
    /**
    * The Instagram username of the location without the \'
    */
    'instagramUsername'?: string;
    /**
    * The Facebook profile URL of the location. The URL should begin with \'facebook.com/\'.
    */
    'facebookUrl'?: string;
    'coordinates'?: Coordinates;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "address",
            "baseName": "address",
            "type": "Address"
        },
        {
            "name": "timezone",
            "baseName": "timezone",
            "type": "string"
        },
        {
            "name": "capabilities",
            "baseName": "capabilities",
            "type": "Array<string>"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string"
        },
        {
            "name": "merchantId",
            "baseName": "merchant_id",
            "type": "string"
        },
        {
            "name": "country",
            "baseName": "country",
            "type": "string"
        },
        {
            "name": "languageCode",
            "baseName": "language_code",
            "type": "string"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "phoneNumber",
            "baseName": "phone_number",
            "type": "string"
        },
        {
            "name": "businessName",
            "baseName": "business_name",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string"
        },
        {
            "name": "websiteUrl",
            "baseName": "website_url",
            "type": "string"
        },
        {
            "name": "businessHours",
            "baseName": "business_hours",
            "type": "BusinessHours"
        },
        {
            "name": "businessEmail",
            "baseName": "business_email",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "twitterUsername",
            "baseName": "twitter_username",
            "type": "string"
        },
        {
            "name": "instagramUsername",
            "baseName": "instagram_username",
            "type": "string"
        },
        {
            "name": "facebookUrl",
            "baseName": "facebook_url",
            "type": "string"
        },
        {
            "name": "coordinates",
            "baseName": "coordinates",
            "type": "Coordinates"
        }    ];

    static getAttributeTypeMap() {
        return Location.attributeTypeMap;
    }
}

