/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { V1Money } from './v1Money';
import { V1PaymentDiscount } from './v1PaymentDiscount';
import { V1PaymentItemDetail } from './v1PaymentItemDetail';
import { V1PaymentModifier } from './v1PaymentModifier';
import { V1PaymentTax } from './v1PaymentTax';

/**
* Payment include an` itemizations` field that lists the items purchased, along with associated fees, modifiers, and discounts. Each itemization has an `itemization_type` field that indicates which of the following the itemization represents:  <ul> <li>An item variation from the merchant\'s item library</li> <li>A custom monetary amount</li> <li> An action performed on a Square gift card, such as activating or reloading it. </li> </ul>  *Note**: itemization information included in a `Payment` object reflects details collected **at the time of the payment**. Details such as the name or price of items might have changed since the payment was processed.
*/
export class V1PaymentItemization {
    /**
    * The item\'s name.
    */
    'name'?: string;
    /**
    * The quantity of the item purchased. This can be a decimal value.
    */
    'quantity'?: number;
    /**
    * The type of purchase that the itemization represents, such as an ITEM or CUSTOM_AMOUNT See [V1PaymentItemizationItemizationType](#type-v1paymentitemizationitemizationtype) for possible values
    */
    'itemizationType'?: string;
    'itemDetail'?: V1PaymentItemDetail;
    /**
    * Notes entered by the merchant about the item at the time of payment, if any.
    */
    'notes'?: string;
    /**
    * The name of the item variation purchased, if any.
    */
    'itemVariationName'?: string;
    'totalMoney'?: V1Money;
    'singleQuantityMoney'?: V1Money;
    'grossSalesMoney'?: V1Money;
    'discountMoney'?: V1Money;
    'netSalesMoney'?: V1Money;
    /**
    * All taxes applied to this itemization.
    */
    'taxes'?: Array<V1PaymentTax>;
    /**
    * All discounts applied to this itemization.
    */
    'discounts'?: Array<V1PaymentDiscount>;
    /**
    * All modifier options applied to this itemization.
    */
    'modifiers'?: Array<V1PaymentModifier>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "quantity",
            "baseName": "quantity",
            "type": "number"
        },
        {
            "name": "itemizationType",
            "baseName": "itemization_type",
            "type": "string"
        },
        {
            "name": "itemDetail",
            "baseName": "item_detail",
            "type": "V1PaymentItemDetail"
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "string"
        },
        {
            "name": "itemVariationName",
            "baseName": "item_variation_name",
            "type": "string"
        },
        {
            "name": "totalMoney",
            "baseName": "total_money",
            "type": "V1Money"
        },
        {
            "name": "singleQuantityMoney",
            "baseName": "single_quantity_money",
            "type": "V1Money"
        },
        {
            "name": "grossSalesMoney",
            "baseName": "gross_sales_money",
            "type": "V1Money"
        },
        {
            "name": "discountMoney",
            "baseName": "discount_money",
            "type": "V1Money"
        },
        {
            "name": "netSalesMoney",
            "baseName": "net_sales_money",
            "type": "V1Money"
        },
        {
            "name": "taxes",
            "baseName": "taxes",
            "type": "Array<V1PaymentTax>"
        },
        {
            "name": "discounts",
            "baseName": "discounts",
            "type": "Array<V1PaymentDiscount>"
        },
        {
            "name": "modifiers",
            "baseName": "modifiers",
            "type": "Array<V1PaymentModifier>"
        }    ];

    static getAttributeTypeMap() {
        return V1PaymentItemization.attributeTypeMap;
    }
}

