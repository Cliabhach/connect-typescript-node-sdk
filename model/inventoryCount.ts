/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
* Represents Square\'s estimated quantity of items in a particular state at a particular location based on the known history of physical counts and inventory adjustments
*/
export class InventoryCount {
    /**
    * The Square generated ID of the [CatalogObject](#type-catalogobject) being tracked.
    */
    'catalogObjectId'?: string;
    /**
    * The [CatalogObjectType](#type-catalogobjecttype) of the [CatalogObject](#type-catalogobject) being tracked. Tracking is only supported for the `ITEM_VARIATION` type.
    */
    'catalogObjectType'?: string;
    /**
    * The current [InventoryState](#type-inventorystate) for the related quantity of items. See [InventoryState](#type-inventorystate) for possible values
    */
    'state'?: string;
    /**
    * The Square ID of the [Location](#type-location) where the related quantity of items are being tracked.
    */
    'locationId'?: string;
    /**
    * The number of items in the count as a decimal string. Can support up to 5 digits after the decimal point.  _Important_: The Point of Sale app and Dashboard do not currently support decimal quantities. If a Point of Sale app or Dashboard attempts to read a decimal quantity on inventory counts or adjustments, the quantity will be rounded down to the nearest integer. For example, `2.5` will become `2`, and `-2.5` will become `-3`.  Read [Decimal Quantities (BETA)](/orders-api/what-it-does#decimal-quantities) for more information.
    */
    'quantity'?: string;
    /**
    * A read-only timestamp in RFC 3339 format that indicates when Square received the most recent physical count or adjustment that had an affect on the estimated count.
    */
    'calculatedAt'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "catalogObjectId",
            "baseName": "catalog_object_id",
            "type": "string"
        },
        {
            "name": "catalogObjectType",
            "baseName": "catalog_object_type",
            "type": "string"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "string"
        },
        {
            "name": "locationId",
            "baseName": "location_id",
            "type": "string"
        },
        {
            "name": "quantity",
            "baseName": "quantity",
            "type": "string"
        },
        {
            "name": "calculatedAt",
            "baseName": "calculated_at",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return InventoryCount.attributeTypeMap;
    }
}

